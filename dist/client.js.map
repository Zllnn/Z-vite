{"version":3,"sources":["../src/client/client.ts"],"sourcesContent":["console.log(\"[vite] connecting...\");\r\n\r\nconst socket = new WebSocket(`ws://localhost:__HMR_PORT__`, \"vite-hmr\");\r\n\r\nsocket.addEventListener(\"message\", async ({ data }) => {\r\n  handleMessage(JSON.parse(data)).catch(console.error);\r\n});\r\n\r\ninterface Update {\r\n  type: \"js-update\" | \"css-update\";\r\n  path: string;\r\n  acceptedPath: string;\r\n  timestamp: number;\r\n}\r\n\r\nasync function handleMessage(payload: any) {\r\n  switch (payload.type) {\r\n    case \"connected\":\r\n      console.log(`[vite] connected.`);\r\n      setInterval(() => socket.send(\"ping\"), 1000);\r\n      break;\r\n\r\n    case \"update\":\r\n      payload.updates.forEach((update: Update) => {\r\n        if (update.type === \"js-update\") {\r\n          fetchUpdate(update);\r\n        }\r\n      });\r\n      break;\r\n  }\r\n}\r\n\r\ninterface HotModule {\r\n  id: string;\r\n  callbacks: HotCallback[];\r\n}\r\n\r\ninterface HotCallback {\r\n  deps: string[];\r\n  fn: (modules: object[]) => void;\r\n}\r\n\r\nconst hotModulesMap = new Map<string, HotModule>();\r\nconst pruneMap = new Map<string, (data: any) => void | Promise<void>>();\r\n\r\nexport const createHotContext = (ownerPath: string) => {\r\n  const mod = hotModulesMap.get(ownerPath);\r\n  if (mod) {\r\n    mod.callbacks = [];\r\n  }\r\n\r\n  function acceptDeps(deps: string[], callback: any) {\r\n    const mod: HotModule = hotModulesMap.get(ownerPath) || {\r\n      id: ownerPath,\r\n      callbacks: [],\r\n    };\r\n    mod.callbacks.push({\r\n      deps,\r\n      fn: callback,\r\n    });\r\n    hotModulesMap.set(ownerPath, mod);\r\n  }\r\n\r\n  return {\r\n    accept(deps: any) {\r\n      if (typeof deps === \"function\" || !deps) {\r\n        acceptDeps([ownerPath], ([mod]) => deps && deps(mod));\r\n      }\r\n    },\r\n    prune(cb: (data: any) => void) {\r\n      pruneMap.set(ownerPath, cb);\r\n    },\r\n  };\r\n};\r\n\r\nasync function fetchUpdate({ path, timestamp }: Update) {\r\n  const mod = hotModulesMap.get(path);\r\n  if (!mod) return;\r\n\r\n  const moduleMap = new Map();\r\n  const modulesToUpdate = new Set<string>();\r\n\r\n  modulesToUpdate.add(path);\r\n\r\n  await Promise.all(\r\n    Array.from(modulesToUpdate).map(async (dep) => {\r\n      const [path, query] = dep.split(`?`);\r\n      try {\r\n        const newMod = await import(\r\n          path + `?t=${timestamp}${query ? `&${query}` : \"\"}`\r\n        );\r\n        moduleMap.set(dep, newMod);\r\n      } catch (e) {}\r\n    })\r\n  );\r\n\r\n  return () => {\r\n    for (const { deps, fn } of mod.callbacks) {\r\n      fn(deps.map((dep: any) => moduleMap.get(dep)));\r\n    }\r\n    console.log(`[vite] hot updated: ${path}`);\r\n  };\r\n}\r\n\r\nconst sheetsMap = new Map();\r\n\r\nexport function updateStyle(id: string, content: string) {\r\n  let style = sheetsMap.get(id);\r\n  if (!style) {\r\n    style = document.createElement(\"style\");\r\n    style.setAttribute(\"type\", \"text/css\");\r\n    style.innerHTML = content;\r\n    document.head.appendChild(style);\r\n  } else {\r\n    style.innerHTML = content;\r\n  }\r\n  sheetsMap.set(id, style);\r\n}\r\n\r\nexport function removeStyle(id: string): void {\r\n  const style = sheetsMap.get(id);\r\n  if (style) {\r\n    document.head.removeChild(style);\r\n  }\r\n  sheetsMap.delete(id);\r\n}\r\n"],"mappings":"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","names":["mod","path"]}